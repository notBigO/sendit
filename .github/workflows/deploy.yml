name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Go backend Docker image
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/sendit_backend
          IMAGE_TAG: latest
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG -f Dockerfile ./
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            if ! command -v docker &> /dev/null; then
              sudo apt update -y
              sudo apt install -y ca-certificates curl gnupg
              sudo install -m 0755 -d /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo chmod a+r /etc/apt/keyrings/docker.gpg
              sudo apt update -y
              sudo apt install -y docker-ce docker-ce-cli containerd.io
            fi

            docker_image="${{ secrets.DOCKER_USERNAME }}/sendit_backend:latest"
            sudo docker pull "$docker_image"

            sudo docker stop backend || true
            sudo docker rm backend || true

            sudo docker run -d \
              --name backend \
              -p 8080:8080 \
              -e "PORT=8080" \
              "$docker_image"
